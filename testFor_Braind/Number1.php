<?php
$articleText = 'Обыкновенный ёж — животное небольших размеров. Длина его тела составляет 20—30 см, хвоста — около 3 см[5] масса тела — 700—800 г[6]. Уши относительно небольшие (обычно меньше 3,5 см). Морда вытянутая. Нос у животного острый и постоянно влажный. У обыкновенных ежей, обитающих на Кипре, уши более крупные[7]. На верхней челюсти у ежей 20 мелких острых зубов, а на нижней — 16.';

$articleLink = 'https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8B%D0%BA%D0%BD%D0%BE%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9_%D1%91%D0%B6';

$intermediate = explode(" ", mb_substr($articleText, 0, 200)); // вспомогательный массив, нужен для отделения трёх последних слов строки
$articlePreview = '';

for ($i = 0;$i < count($intermediate) - 3;$i++)
{
    $articlePreview .= $intermediate[$i] . ' '; //заполняем превью словами, исключая последние 3
    
}
//вставляем ссылку
$articlePreview .= "<a href = '$articleLink'>";
//далее записываем три последних слова
$articlePreview .= $intermediate[count($intermediate) - 3];
$articlePreview .= ' ' . $intermediate[count($intermediate) - 2];
$articlePreview .= ' ' . $intermediate[count($intermediate) - 1];
//вставляем многоточие и закрываем ссылку
$articlePreview .= '&hellip;</a>';

echo $articlePreview;

/*из проблем с которыми я столкнулся:
    
        ) Кодировка. Когда использутся текст на кирилице, то при использовании функции substr количество обрезаемых символов было в два раза меньше указанного.
    как я понял, было это из-за того, что в кодировке UTF-8 символы кирилицы кодируются большим количеством байт,
    чем в латинице, и по этому с английским текстом он работал исправно, а с русским некоторые функции выдают не тот результат.
    
        ) При передаче в переменную текста, содержащего коды символов, теги, или подобные формулы, может случится так,
    что при обрезании текста обрежется часть той конструкции. в результате, в конце текста статьи могут появится  символы,
    которых там быть не должно. возможное решение - удаление всех тегов и знаков из текста перед тем как его обрезать.
    возможно функцией strip_tags.
*/
?>

